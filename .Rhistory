`小明108學年課表B` <- list(
list("108-1","高級會計學","高等統計學"),
list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
#可以再用vector分群
`小明108學年課表C` <- list(
list(c("108-1"),
c("高級會計學","高等統計學")),
list(
c("108-2"),c("食在拉丁美洲"))
)
print(`小明108學年課表C`)
#第一個小list取叫`108學年第1學期`, 第二個叫`108學年第2學期`
#小list內的向量也分別命名為semester&courses
`小明108學年課表C` <- list(
`108學年第1學期`=list(
semester= c("108-1"), # 可只寫 "108-1"
courses=c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
semester=c("108-2"),
courses=c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
library(lubridate)
#第一群
authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
)
#第二層
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
)
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
print(commit)
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
library(jsonlite)
fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
# 108-1
course1_1081 <-
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
course2_1081 <-
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
`108-1修課記錄` <-
list(
course1_1081,
course2_1081
)
# 108-2
course1_1082 <-
list(
name="作業研究",
teacher="Jason",
grade=90
)
`108-2修課記錄` <-
list(
course1_1082
)
# 整合兩學期
`每學期修課記錄` <- list(
`108-1`=`108-1修課記錄`,
`108-2`=`108-2修課記錄`
)
# 完成記錄
`小明的修課記錄` <-
list(
name="小明",
semesters=`每學期修課記錄`
)
library(lubridate)
Taipei<-list(
date=list(ymd("2020-03-31"),ymd("2020-04-01")),
temperature=list(maxtemp=25,mintemp=18)
)
NewTaipei<-list(
date=list(ymd("2020-03-31"),ymd("2020-04-01")),
temperature=list(maxtemp=24,mintemp=15)
)
forecast<-list(Taipei,NewTaipei)
print(forecast)
object1 <- c(2,5)
object2 <- ymd_hms(
c("2015-03-22 12:28:42","2017-12-22 15:33:48"),
tz="Asia/Taipei"
)
object3 <- list(2, FALSE, c("a","b","c"))
save(object1, object2, object3, file="threeObjects.Rda")
load("threeObjects.Rda")
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
#在vector內第X個元素
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：listexample只有student和`學期`兩個元素
length(listExample)
#這裡的到的不是元素的名稱(eg.student), 而是裡面的值。所以第一個是小明
#第二個是一大串
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
# 有哪些名字可選：
names(listExample)
#用$可以直接用名子叫list內的元素
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
#用str來看一個list的structure
str(listExample)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
newTaipeiCityVaccine[["result"]] #這和$是一樣的意思(newTaipeiCityVaccine$result)
str(newTaipeiCityVaccine[["result"]], max.level = 1)
#str可以這樣套著用，max level是指說你要他在底下顯示到list的第幾層
#用[c()]選
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
tainanSportsMap[c(6,9)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")] #只選一個物件時不要用這種選法，會選的不乾淨
listExample[c("student","學期")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
str(listExample)
listExample[[1]]
listExample[[2]]
listExample[[1]]
listExample[[2]]
str(listExample)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 # 學期拿出來，有2個元素的list
str(get1, max.level = 1)
get1 # 學期拿出來，有2個元素的list
str(get1)
get2 # listExample 只留下學期元素，是個只有一個元素的list
str(get2, max.level = 2)
get2 # listExample 只留下學期元素，是個只有一個元素的list
str(get2)
get1$`108-1`->get1_layer1;get1_layer1
get1$`108-1`->get1_layer1
str(get1_layer1)
get1_layer1[[1]]->get1_layer2
str(get1_layer2)
get1_layer2$`teacher`
get1_layer2$`teacher`
listExample[["學期"]]$`108-1`[[1]]$teacher
get2_layer1<-get2[[1]]
get2_layer2<-get2_layer1[["108-1"]]
get2_layer3<-get2_layer2[[1]]
get2_layer3$teacher
#today <- list(
# list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
#  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
#tomorrow <- list(
#  list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
#  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
#weather <- list(today,tomorrow)
#str(weather)
#這裡的命名法很差，再取物時完全用不上，所以要改成:
today <- list(
list("台北市",highest_temp=c(highest_temp = 25),lowest_temp=c(lowest_temp = 18)),
list("新北市",highest_temp=c(highest_temp = 24),lowest_temp=c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
#today <- list(
# list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
#  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
#tomorrow <- list(
#  list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
#  list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
#weather <- list(today,tomorrow)
#str(weather)
#這裡的命名法很差，再取物時完全用不上，所以要改成:
today <- list(
list("台北市",highest_temp=c(highest_temp = 25),lowest_temp=c(lowest_temp = 18)),
list("新北市",highest_temp=c(highest_temp = 24),lowest_temp=c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
today[[1]]$`highest_temp`
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
a[[7]]<-"Johnson"
a
a<-c(a,("mary"))
a<-c(a,("mary"))
a
a<-c(a,("mary"))
a<-c(a,("mary"))
a<-c(a,("mary"))
a
a<-c(a,("mary"))
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
#practice
a[[7]]<-"Johnson"
a
a<-c(a,("mary"))
a
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
list1[[2]]$status <- c(height=163, weight=45)
list1[[1]]$status[["height"]] <- 176
str(list1)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
list1[[2]]$status <- c(height=163, weight=45)
list1[[1]]$status[["height"]] <- 176
str(list1)
list1[[1]][["age"]] <- 21
list1[[2]]["age"] <- list(21)
# 改變「一個」時，使用[[ ]]比較不會錯。
str(list1)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
list1[[1]][c("bloodType","registered")] <- list("AB",TRUE)
str(list1)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
str(listExample)
listExample[[2]][[1]][[2]]<-list(name="產業經濟學",teacher="Wen",grade=88)
str(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$學期$`108-1`[[2]] <-
list(name="產業經濟學")
str(listExample)
listExample$學期$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
listExample[[2]][[1]][[2]]<-list(name="產業經濟學",teacher="Wen",grade=88)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
str(listExample)
listExample[[2]][[1]][[2]]<-list(name="產業經濟學",teacher="Wen",grade=88)
str(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$學期$`108-1`[[2]] <-
list(name="產業經濟學")
str(listExample)
listExample$學期$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$學期$`108-1`[[2]] <-
list(name="產業經濟學")
listExample$學期$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$`學期`$`108-1`[[2]] <-
list(name="產業經濟學")
listExample$`學期`$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
str(listExample)
# 108-1新增一科目成績
listExample$`學期`$`108-1`[[2]] <-
list(name="產業經濟學")
listExample$`學期`$`108-1`[[2]][c("teacher","grade")] <-
list(
"Wen",
88
)
str(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
str(listExample)
listExample[[2]][[1]][[2]]<-list(name="產業經濟學",teacher="Wen",grade=88)
str(listExample)
listExample[[2]][[1]][[2]]<-list(name="產業經濟學",teacher="Wen",grade=88)
str(listExample)
print(a)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
#practice
a[[7]]<-"Johnson"
a
a<-c(a,("mary"))
a
print(a)
a[-c(1,3)]
a[c(-2)]
print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
),
list(
name="Mary",
birthday=ymd("1998-08-24"),
status=c(height=163, weight=45),
age=21,
bloodType="AB"
)
)
str(list1)
